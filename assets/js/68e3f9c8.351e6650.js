(self.webpackChunk_blockchain_lab_um_ssi_snap_docs=self.webpackChunk_blockchain_lab_um_ssi_snap_docs||[]).push([[62],{3241:(e,t,a)=>{"use strict";a.r(t),a.d(t,{assets:()=>K,contentTitle:()=>B,default:()=>te,frontMatter:()=>W,metadata:()=>J,toc:()=>Y});var n=a(8427),i=a(2784),s=a(876),o=a(7160),r=a(7565),c=a(3003),l=a(9212);async function d(){return await window.ethereum.request({method:"wallet_getSnaps"})}async function u(){try{return await d(),!0}catch(e){return!1}}var h=a(1263),m=a(2761),p=a(7865),g=a(6947),b=a(4843),w=a(8420),f=a(7265),v=a(3291),y=a(3592),C=a(2698),S=a(2869),k=a(1237),I=a(3950);async function E(e,t){return console.log("Request:",e),await window.ethereum.request({method:t,params:[e]})}async function M(e){return e||(e={}),await E({method:"getVCs",params:{query:e}},this.snapId)}async function Z(e,t,a){return await E({method:"getVP",params:{vcId:e,challenge:t,domain:a}},this.snapId)}async function _(e){return await E({method:"saveVC",params:{verifiableCredential:e}},this.snapId)}async function x(){return await E({method:"getDID"},this.snapId)}async function D(){return await E({method:"getMethod"},this.snapId)}async function P(){return await E({method:"getAvailableMethods"},this.snapId)}async function V(e){return await E({method:"switchMethod",params:{didMethod:e}},this.snapId)}async function A(){return await E({method:"togglePopups"},this.snapId)}async function T(e){return await E({method:"changeInfuraToken",params:{infuraToken:e}},this.snapId)}async function $(){return await E({method:"getVCStore"},this.snapId)}async function O(){return await E({method:"getAvailableVCStores"},this.snapId)}async function q(e){return await E({method:"setVCStore",params:{vcStore:e}},this.snapId)}class z{constructor(e,t){this.accountChanged=e=>{console.log("Account changed",e[0])},this.getSSISnapApi=async()=>({saveVC:_.bind(this),getVCs:M.bind(this),getVP:Z.bind(this),togglePopups:A.bind(this),changeInfuraToken:T.bind(this),getDID:x.bind(this),getMethod:D.bind(this),getAvailableMethods:P.bind(this),switchMethod:V.bind(this),getVCStore:$.bind(this),setVCStore:q.bind(this),getAvailableVCStores:O.bind(this)}),this.snapOrigin=e,this.snapId=`wallet_snap_${this.snapOrigin}`,this.supportedMethods=t,window.ethereum.on("accountsChanged",this.accountChanged)}}const L="npm:@blockchain-lab-um/ssi-snap";async function U(e){void 0===e&&(e={});const{snapId:t=L,version:a="latest",supportedMethods:n=["did:ethr"]}=e;if(!window.ethereum||!window.ethereum.isMetaMask)throw new Error("Metamask is not installed");if(!await u())throw new Error("Current Metamask version doesn't support snaps");const i=await async function(e,t){console.log(await d());try{return!!Object.values(await d()).find((a=>a.id===e&&(!t||a.version===t)))}catch(a){return console.log("Failed to obtain installed snaps",a),!1}}(t);i||await window.ethereum.request({method:"wallet_enable",params:[{[`wallet_snap_${t}`]:{version:a}}]});const s=new z(t,n),o=await s.getSSISnapApi(),r=await o.getMethod();return s.supportedMethods.includes(r)||(console.log("Switching method...",r,s.supportedMethods[0]),await o.switchMethod(s.supportedMethods[0])),s}let F=!1;var G=a(5210);const N="teamCard_uvCn",R=new G._k({supportedChainIds:[1,3,4,5,42]});function X(){const[e,t]=(0,i.useState)(!1),[a,n]=(0,i.useState)(""),[s,o]=(0,i.useState)(!1),[r,l]=(0,i.useState)(!1),[d,E]=(0,i.useState)(void 0),[M,Z]=(0,i.useState)(""),[_,x]=(0,i.useState)([]),[D,P]=(0,i.useState)(""),[V,A]=(0,i.useState)(""),[T,$]=(0,i.useState)([]),{activate:O,deactivate:q}=(0,c.Ge)(),{account:z}=(0,c.Ge)();let L="npm:@blockchain-lab-um/ssi-snap";h.Z.canUseDOM&&(0,i.useEffect)((()=>{(async()=>{l(await u())})()}),[]);const G=async()=>{if(await O(R),console.log("Metamask connected",z),window.ethereum){const a=await async function(e){try{console.log("Attempting to connect to snap...");const t=await U({snapId:e,supportedMethods:["did:ethr","did:key"]});return F=!0,console.log("Snap installed!"),{isSnapInstalled:!0,snap:t}}catch(t){return console.error(t),F=!1,{isSnapInstalled:!1}}}(L);if(a.isSnapInstalled){var e;t(!0);const n=await(null==(e=a.snap)?void 0:e.getSSISnapApi());E(n),Z(await n.getMethod()),x(await n.getAvailableMethods()),P(await n.getDID()),A(await n.getVCStore()),$(await n.getAvailableVCStores())}}};return h.Z.canUseDOM&&window.ethereum&&r?i.createElement("div",{className:N},i.createElement(m.ZP,{container:!0,alignItems:"center",spacing:2},z&&i.createElement(m.ZP,{item:!0,xs:12},i.createElement(p.Z,{variant:"contained","aria-label":"outlined primary button group"},i.createElement(g.Z,{variant:"outlined",size:"large",style:{backgroundColor:"#e8e8e8",color:"#8349bb"},onClick:async()=>{await navigator.clipboard.writeText(z)}},`${z.substring(0,5)}...${z.substring(38)}`),i.createElement(g.Z,{variant:"outlined",size:"large",style:{backgroundColor:"#e8e8e8",color:"#8349bb"},onClick:async()=>{await navigator.clipboard.writeText(D)}},`${D.substring(0,D.lastIndexOf(":"))}:${D.split(":")[D.split(":").length-1].substring(0,5)}...${D.substring(D.length-4)}`),i.createElement(g.Z,{size:"small",style:{textAlign:"center"},onClick:()=>q()},"Disconnect"))),!z&&i.createElement(m.ZP,{item:!0,xs:!0}," ",i.createElement(g.Z,{variant:"contained",onClick:G},"Connect MetaMask")),z&&e&&i.createElement(i.Fragment,null,i.createElement(m.ZP,{item:!0,xs:12},i.createElement(m.ZP,{item:!0,xs:!0},i.createElement(b.Z,{variant:"h5",sx:{mb:1.5}},"Snap Configuration")),i.createElement(w.Z,{id:"standard-basic",label:"Infura Token",variant:"standard",size:"small",color:"secondary",style:{backgroundColor:"#e8e8e8"},onChange:e=>{!function(e){n(e.target.value)}(e)}}),i.createElement(g.Z,{variant:"contained",onClick:()=>async function(){if(""!==a&&d){const e=await d.changeInfuraToken(a);console.log(e),o(e)}}()},"Change Infura Token")),i.createElement(m.ZP,{item:!0,xs:!0},i.createElement(g.Z,{variant:"contained",onClick:()=>async function(){if(d){const e=await d.togglePopups();console.log(e),o(e)}}()},"Toggle popups")),i.createElement(m.ZP,{item:!0,xs:12},i.createElement(b.Z,{variant:"h5",sx:{mb:1.5}},"DID Configuration")),i.createElement(m.ZP,{item:!0,xs:3},i.createElement(f.Z,{fullWidth:!0,variant:"filled"},i.createElement(v.Z,{id:"select-did-method-label",color:"secondary"},"DID Method"),i.createElement(y.Z,{color:"secondary",style:{backgroundColor:"#e8e8e8"},labelId:"select-did-method-label",id:"select-did-method",value:M,label:"DID Method",onChange:e=>(async e=>{await d.switchMethod(e.target.value)&&(Z(e.target.value),P(await d.getDID()))})(e)},_.map(((e,t)=>i.createElement(C.Z,{value:e,key:t},e)))))),i.createElement(m.ZP,{item:!0,xs:12},i.createElement(b.Z,{variant:"h5",sx:{mb:1.5}},"VC Store Configuration")),i.createElement(m.ZP,{item:!0,xs:3},i.createElement(S.Z,null,i.createElement(k.Z,{control:i.createElement(I.Z,{checked:"ceramic"===V}),label:"Enable Ceramic",onChange:e=>(async e=>{"on"===e.target.value&&await d.setVCStore("ceramic"),A(await d.getVCStore())})(e)})))))):i.createElement("div",null,"Install MetaMask first!")}function j(e){return new l.Q(e)}const H=(0,o.Z)({palette:{primary:{main:"#a495ff",light:"#8349bb",dark:"#8349bb"},secondary:{main:"#8349bb",light:"#a495ff",dark:"#3b3b3b"}}});function Q(){return i.createElement(c.Ht,{getLibrary:j},i.createElement(r.Z,{theme:H},i.createElement(X,null)))}const W={sidebar_position:6},B="Configure SSI Snap",J={unversionedId:"config",id:"config",title:"Configure SSI Snap",description:"",source:"@site/docs/config.mdx",sourceDirName:".",slug:"/config",permalink:"/ssi-snap-docs/docs/config",draft:!1,editUrl:"https://github.com/blockchain-lab-um/ssi-snap-docs/edit/master/docs/config.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Live Demo",permalink:"/ssi-snap-docs/docs/tutorial/demo"},next:{title:"Libraries & Plugins",permalink:"/ssi-snap-docs/docs/category/libraries--plugins"}},K={},Y=[],ee={toc:Y};function te(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,n.Z)({},ee,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"configure-ssi-snap"},"Configure SSI Snap"),(0,s.kt)(Q,{mdxType:"MetaMaskConfigRoot"}))}te.isMDXComponent=!0},9005:()=>{},5179:()=>{}}]);